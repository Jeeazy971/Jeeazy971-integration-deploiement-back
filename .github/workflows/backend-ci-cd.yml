name: Backend CI/CD

on:
  push:
    branches:
      - feature/**
      - main
  pull_request:
    branches:
      - feature/**
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Set up MongoDB URI for tests
        run: echo "MONGO_URI_TEST=mongodb://localhost:27017/test" >> $GITHUB_ENV

      - name: Start MongoDB (via Docker)
        run: |
          docker run -d --name mongodb_container -p 27017:27017 mongo:latest
          # Attendre quelques secondes pour que le container d√©marre
          sleep 10

      - name: Install dependencies
        run: npm install

      - name: Wait for MongoDB to be ready
        run: |
          for i in {1..10}; do
            if nc -z localhost 27017; then
              echo "MongoDB is ready!"
              exit 0
            fi
            echo "Waiting for MongoDB..."
            sleep 3
          done
          echo "MongoDB did not start in time!"
          exit 1

      - name: Run setup
        run: npm run setup

      - name: Run tests
        run: npm run test

      - name: Stop MongoDB (Clean Up)
        run: docker stop mongodb_container && docker rm mongodb_container

  # deploy:
  #   name: Deploy to Vercel
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "20"
  #
  #     - name: Install dependencies
  #       run: npm install
  #
  #     - name: Deploy to Vercel
  #       uses: amondnet/vercel-action@v20
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
  #         working-directory: .
  #         vercel-args: '--prod'
  #       env:
  #         VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
